pkg load optim

% Параметры
a11 = 20;     a12 = 10;     a13 = 25;
a21 = 8;      a22 = 20;     a23 = 10;
b1 = 0.120;   b2 = 0.180;   b3 = 0.210;
c1 = 0.010;   c2 = 0.005;   c3 = 0.008;
d1 = 15;      d2 = 15;      d3 = 20;

% Матрица ограничений A и вектор правых частей B
A = [
    1/a11, 1/a12, 1/a13, 0, 0, 0; % Ограничение по времени станков 1-го типа (максимум 30000 часов)
    0, 0, 0, 1/a21, 1/a22, 1/a23, % Ограничение по времени станков 2-го типа (максимум 45000 часов)
    b1, b2, b3, b1, b2, b3, % Ограничение по расходу пряжи (максимум 30000 кг)
    c1, c2, c3, c1, c2, c3, % Ограничение по расходу красителей (максимум 1000 кг)
    -b1, -b2, -b3, -b1, -b2, -b3 % Условие на использование не менее 3/4 пряжи (минимум 22500 кг)
];

B = [
    30000; % Ограничение по времени станков 1-го типа
    45000; % Ограничение по времени станков 2-го типа
    30000; % Ограничение по расходу пряжи
    1000;  % Ограничение по расходу красителей
    -22500 % Условие на использование не менее 3/4 пряжи
];


% Границы переменных
lb = zeros(6, 1); % Объемы производства ≥ 0
ub = [];          % Верхние границы не ограничены

% 1. Найдем идеальные точки (отдельно для каждого критерия)
% Максимизация выручки
f_rev = -[d1; d2; d3; d1; d2; d3]; % Минимизируем отрицательную выручку
[x_maxrev, maxrev] = linprog(f_rev, A, B, [], [], lb, ub);
max_revenue = -maxrev;

% Минимизация расхода пряжи
f_yarn = [b1; b2; b3; b1; b2; b3];
[x_minyarn, minyarn] = linprog(f_yarn, A, B, [], [], lb, ub);
min_yarn = minyarn;

% 2. Функция для мультипликативной свертки (отношение выручки к расходу)
function res = multiplicative_obj(x)
    revenue = 15*x(1) + 15*x(2) + 20*x(3) + 15*x(4) + 15*x(5) + 20*x(6);
    yarn = 0.12*x(1) + 0.18*x(2) + 0.21*x(3) + 0.12*x(4) + 0.18*x(5) + 0.21*x(6);
    res = -revenue/yarn; % Минимизируем отрицательное отношение
end

% 3. Начальное приближение (среднее между идеальными точками)
x0 = (x_maxrev + x_minyarn)/2;

% 4. Решение задачи нелинейной оптимизации
options = optimset('Display', 'iter', 'Algorithm', 'sqp');
[x_opt, fval] = fmincon(@multiplicative_obj, x0, A, B, [], [], lb, ub, [], options);

% 5. Расчет результатов
revenue = d1*(x_opt(1)+x_opt(4)) + d2*(x_opt(2)+x_opt(5)) + d3*(x_opt(3)+x_opt(6));
yarn = b1*(x_opt(1)+x_opt(4)) + b2*(x_opt(2)+x_opt(5)) + b3*(x_opt(3)+x_opt(6));
ratio = revenue/yarn;

% Вывод результатов
disp('=== ОПТИМАЛЬНЫЙ ПЛАН ПРОИЗВОДСТВА ===');
disp('Количество метров ткани, произведенное на каждом типе станков:');
disp('На станках 1-го типа:');
fprintf('  - Ткань артикула 1: %.2f м\n', x_opt(1));
fprintf('  - Ткань артикула 2: %.2f м\n', x_opt(2));
fprintf('  - Ткань артикула 3: %.2f м\n', x_opt(3));
disp('На станках 2-го типа:');
fprintf('  - Ткань артикула 1: %.2f м\n', x_opt(4));
fprintf('  - Ткань артикула 2: %.2f м\n', x_opt(5));
fprintf('  - Ткань артикула 3: %.2f м\n', x_opt(6));

disp(' ');
disp('=== РЕЗУЛЬТАТЫ ===');
fprintf('Выручка: %.2f руб. (%.1f%% от максимума)\n', revenue, 100*revenue/max_revenue);
fprintf('Расход пряжи: %.2f кг (%.1f%% от минимума)\n', yarn, 100*yarn/min_yarn);
fprintf('Отношение выручка/пряжа: %.2f руб/кг\n', ratio);
fprintf('Значение целевой функции: %.4f\n', -fval);

disp('=== ИДЕАЛЬНЫЕ ТОЧКИ ===');
fprintf('Макс.выручка: %.2f руб.\n', max_revenue);
fprintf('Мин.пряжа: %.2f кг\n', min_yarn);
