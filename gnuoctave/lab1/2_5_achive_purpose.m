pkg load optim

% Параметры
a11 = 20;     a12 = 10;     a13 = 25;
a21 = 8;      a22 = 20;     a23 = 10;
b1 = 0.120;   b2 = 0.180;   b3 = 0.210;
c1 = 0.010;   c2 = 0.005;   c3 = 0.008;
d1 = 15;      d2 = 15;      d3 = 20;

% Матрица ограничений A и вектор правых частей B
A = [
    1/a11, 1/a12, 1/a13, 0, 0, 0; % Ограничение по времени станков 1-го типа (максимум 30000 часов)
    0, 0, 0, 1/a21, 1/a22, 1/a23, % Ограничение по времени станков 2-го типа (максимум 45000 часов)
    b1, b2, b3, b1, b2, b3, % Ограничение по расходу пряжи (максимум 30000 кг)
    c1, c2, c3, c1, c2, c3, % Ограничение по расходу красителей (максимум 1000 кг)
    -b1, -b2, -b3, -b1, -b2, -b3 % Условие на использование не менее 3/4 пряжи (минимум 22500 кг)
];

B = [
    30000; % Ограничение по времени станков 1-го типа
    45000; % Ограничение по времени станков 2-го типа
    30000; % Ограничение по расходу пряжи
    1000;  % Ограничение по расходу красителей
    -22500 % Условие на использование не менее 3/4 пряжи
];

% Желаемые цели
goal_revenue = 2.6e6;
goal_yarn = 25000;
weights = [0.7; 0.3];

% Границы переменных
lb = zeros(6,1);  % x ≥ 0, gamma ≥ 0
ub = [];

% 1. Сначала найдем максимально возможную выручку
f_max_rev = -[d1,d2,d3,d1,d2,d3]';
[x_max_rev, max_rev] = linprog(f_max_rev, A, B, [], [], lb, []);
max_rev = -max_rev;

% 2. Найдем минимально возможный расход пряжи
f_min_yarn = [b1,b2,b3,b1,b2,b3]';
[x_min_yarn, min_yarn] = linprog(f_min_yarn, A, B, [], [], lb, []);

% 3. Проверим достижимость целей
if goal_revenue > max_rev
    fprintf('Цель по выручке (%.2f) недостижима. Максимум: %.2f\n', goal_revenue, max_rev);
    goal_revenue = 0.95 * max_rev; % Делаем цель более реалистичной
end

if goal_yarn < min_yarn
    fprintf('Цель по пряже (%.2f) недостижима. Минимум: %.2f\n', goal_yarn, min_yarn);
    goal_yarn = 1.05 * min_yarn; % Делаем цель более реалистичной
end

% 4. Повторяем оптимизацию с скорректированными целями
A_extended = [A, zeros(5,1)];
A_goal = [
    -[d1,d2,d3,d1,d2,d3], weights(1);
    [b1,b2,b3,b1,b2,b3], -weights(2)
];
B_goal = [-goal_revenue; goal_yarn];

[x_opt, ~] = linprog([zeros(6,1); 1], [A_extended; A_goal], [B; B_goal], [], [], [lb; 0], []);

if !isempty(x_opt)
    production = x_opt(1:6);
    revenue = [d1,d2,d3,d1,d2,d3] * production;
    yarn = [b1,b2,b3,b1,b2,b3] * production;

    disp('=== РЕЗУЛЬТАТЫ С КОРРЕКТИРОВАННЫМИ ЦЕЛЯМИ ===');
    fprintf('Выручка: %.2f руб. (скорректированная цель: %.2f руб.)\n', revenue, goal_revenue);
    fprintf('Расход пряжи: %.2f кг (скорректированная цель: %.2f кг)\n', yarn, goal_yarn);

    disp('План производства:');
    fprintf('Станок 1: %.1f м, %.1f м, %.1f м\n', production(1:3));
    fprintf('Станок 2: %.1f м, %.1f м, %.1f м\n', production(4:6));
else
    disp('Решение не найдено даже после корректировки целей.');
    disp('Рекомендации:');
    disp('1. Увеличьте доступные ресурсы (время станков, материалы)');
    disp('2. Ослабьте минимальные требования к производству');
    disp('3. Пересмотрите желаемые цели');
end
