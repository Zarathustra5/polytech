pkg load optim

% Параметры
a11 = 20;     a12 = 10;     a13 = 25;
a21 = 8;      a22 = 20;     a23 = 10;
b1 = 0.120;   b2 = 0.180;   b3 = 0.210;
c1 = 0.010;   c2 = 0.005;   c3 = 0.008;
d1 = 15;      d2 = 15;      d3 = 20;

% Матрица ограничений A и вектор правых частей B
A = [
    1/a11, 1/a12, 1/a13, 0, 0, 0; % Ограничение по времени станков 1-го типа (максимум 30000 часов)
    0, 0, 0, 1/a21, 1/a22, 1/a23, % Ограничение по времени станков 2-го типа (максимум 45000 часов)
    b1, b2, b3, b1, b2, b3, % Ограничение по расходу пряжи (максимум 30000 кг)
    c1, c2, c3, c1, c2, c3, % Ограничение по расходу красителей (максимум 1000 кг)
    -b1, -b2, -b3, -b1, -b2, -b3 % Условие на использование не менее 3/4 пряжи (минимум 22500 кг)
];

B = [
    30000; % Ограничение по времени станков 1-го типа
    45000; % Ограничение по времени станков 2-го типа
    30000; % Ограничение по расходу пряжи
    1000;  % Ограничение по расходу красителей
    -22500 % Условие на использование не менее 3/4 пряжи
];

% Значение 125000 берем из результатов минимизации пряжи, без него первоначальные параметры не будут удовлетворять ограничению на минимальное количество пряжи и будет выходить ошибка
lb = [0; 0; 0; 0; 125000; 0];
options = optimset('Display', 'final', 'Algorithm', 'sqp');

%% 1. Оптимизация для максимальной выручки
rev_objective = @(x) - (d1*x(1) + d2*x(2) + d3*x(3) + d1*x(4) + d2*x(5) + d3*x(6));
[x_rev, fval_rev] = fmincon(rev_objective, lb, A, B, [], [], lb, [], [], options);
z1_opt = -fval_rev;

%% 2. Оптимизация для минимального расхода пряжи
yarn_objective = @(x) b1*x(1) + b2*x(2) + b3*x(3) + b1*x(4) + b2*x(5) + b3*x(6);
[x_yarn, fval_yarn] = fmincon(yarn_objective, lb, A, B, [], [], lb, [], [], options);
z2_opt = fval_yarn;

%% 3. Метод метрики для компромиссного решения
% Функции для вычисления текущих значений критериев
calc_z1 = @(x) d1*x(1) + d2*x(2) + d3*x(3) + d1*x(4) + d2*x(5) + d3*x(6);
calc_z2 = @(x) b1*x(1) + b2*x(2) + b3*x(3) + b1*x(4) + b2*x(5) + b3*x(6);

% Функция метрики
metric = @(x) (1 - calc_z1(x)/z1_opt)^2 + (1 - calc_z2(x)/z2_opt)^2;

% Начальная точка - среднее между оптимумами
starting_point = (x_rev + x_yarn)/2;

% Оптимизация метрики
[x_comp, fval_comp] = fmincon(metric, starting_point, A, B, [], [], lb, [], [], options);

%% Вывод результатов
fprintf('\n=== МАКСИМАЛЬНАЯ ВЫРУЧКА ===\n');
fprintf('Выручка: %.2f руб\nРасход пряжи: %.2f кг\n\n', z1_opt, calc_z2(x_rev));

fprintf('=== МИНИМАЛЬНЫЙ РАСХОД ПРЯЖИ ===\n');
fprintf('Выручка: %.2f руб\nРасход пряжи: %.2f кг\n\n', calc_z1(x_yarn), z2_opt);

fprintf('=== КОМПРОМИССНОЕ РЕШЕНИЕ ===\n');
fprintf('Выручка: %.2f руб (%.1f%% от максимума)\n', calc_z1(x_comp), 100*calc_z1(x_comp)/z1_opt);
fprintf('Расход пряжи: %.2f кг (%.1f%% от минимума)\n\n', calc_z2(x_comp), 100*calc_z2(x_comp)/z2_opt);

disp('=== ОПТИМАЛЬНЫЙ ПЛАН ПРОИЗВОДСТВА ===');
disp('Количество метров ткани, произведенное на каждом типе станков:');
disp('На станках 1-го типа:');
fprintf('  - Ткань артикула 1: %.2f м\n', x_comp(1));
fprintf('  - Ткань артикула 2: %.2f м\n', x_comp(2));
fprintf('  - Ткань артикула 3: %.2f м\n', x_comp(3));
disp('На станках 2-го типа:');
fprintf('  - Ткань артикула 1: %.2f м\n', x_comp(4));
fprintf('  - Ткань артикула 2: %.2f м\n', x_comp(5));
fprintf('  - Ткань артикула 3: %.2f м\n', x_comp(6));
